{"version":3,"sources":["Components/FileCard/FileCard.module.css","Components/Header/Header.module.css","Components/Home/Home.module.css","Components/InputToClipboard/InputToClipboard.module.css","Components/AddFileCard/AddFileCard.module.css","Components/Backdrop/Backdrop.module.css","Components/RemoteFiles/RemoteFiles.module.css","Components/FileInput/FileInput.module.css","Components/Spinner/Spinner.module.css","Components/FileList/FileList.module.css","Components/LocalFiles/LocalFiles.module.css","lib/helpers/classnames.ts","lib/helpers/tryParseJSON.ts","lib/helpers/mapObject.ts","lib/helpers/formatFileData.ts","lib/helpers/saveFile.ts","lib/helpers/filterFiles.ts","lib/helpers/getConnectionState.ts","lib/helpers/readFileChunks.ts","lib/helpers/removeKey.ts","lib/helpers/throttle.ts","lib/redux/action/actions/hostFilesActions.ts","lib/helpers/generateFileId.ts","lib/redux/action/types.ts","lib/redux/action/actions/connectionActions.ts","lib/redux/reducer/connection.ts","lib/redux/reducer/hostFiles.ts","lib/redux/reducer/clientFiles.ts","lib/redux/reducer/index.ts","lib/redux/store.ts","lib/webrtc/WebRTCConnection.ts","lib/webrtc/WebRTCFileChannel.ts","lib/webrtc/WebRTCWithFileChannel.ts","lib/firebase/firebase.ts","lib/firebase/FirestoreConnection.ts","Components/Backdrop/index.ts","Components/Backdrop/Backdrop.tsx","Components/FileInput/index.tsx","Components/FileInput/FileInput.tsx","Components/Spinner/Spinner.tsx","Components/Home/index.ts","Components/Home/Home.tsx","Containers/Home/index.ts","Containers/Home/Home.tsx","Pages/Home/index.tsx","Pages/Home/Home.tsx","Components/FileCard/index.ts","Components/FileCard/FileCard.tsx","Components/FileList/index.ts","Components/FileList/FileList.tsx","Components/AddFileCard/index.ts","Components/AddFileCard/AddFileCard.tsx","Components/LocalFiles/index.ts","Components/LocalFiles/LocalFiles.tsx","Containers/LocalFiles/index.ts","Containers/LocalFiles/LocalFiles.tsx","Components/RemoteFiles/index.ts","Components/RemoteFiles/RemoteFiles.tsx","Containers/RemoteFiles/index.ts","Containers/RemoteFiles/RemoteFiles.tsx","lib/redux/action/actions/clientFilesActions.ts","Components/Spinner/index.ts","Components/InputToClipboard/index.ts","Components/InputToClipboard/InputToClipboard.tsx","Components/Header/index.ts","Components/Header/Header.tsx","Components/Share/index.ts","Components/Share/Share.tsx","Containers/Share/index.ts","Containers/Share/Share.tsx","Pages/Share/index.tsx","Pages/Share/Share.tsx","App.tsx","index.tsx","Components/Share/Share.module.css"],"names":["module","exports","classnames","classes","Array","isArray","join","Object","keys","filter","cn","tryParseJSON","str","JSON","parse","mapObject","obj","func","newObj","id","files","file","name","size","link","document","createElement","href","URL","createObjectURL","body","appendChild","download","click","window","revokeObjectURL","remove","type","match","isHost","isConnected","splitBuffer","buf","chunkSize","offset","chunks","byteLength","push","slice","options","readChunkSize","onChunkLoad","onLoaded","reader","FileReader","onload","result","onloadend","readAsArrayBuffer","key","deleted","val","throttle","timeout","savedArgs","ms","isThrottled","args","setTimeout","stop","clearTimeout","hostAddFiles","filesWithId","forEach","lastModified","generateFileId","sentBytes","payload","setConnectionStatus","status","setConnection","state","action","connection","destroy","initState","setSentBytes","setDownloadProgress","downloadedSize","saveFileData","combined","combineReducers","hostFiles","removeKey","clientFiles","store","createStore","rootReducer","RTCPeerConnectionConfig","iceServers","urls","WebRTCConnection","config","messageChannel","onConnection","onMessage","msg","ondatachannel","oniceconnectionstatechange","handleDataChannel","channel","label","createOffer","Promise","resolve","a","onicecandidate","candidate","description","offer","setLocalDescription","iceGatheringState","connect","descr","remote","RTCSessionDescription","setRemoteDescription","createAnswer","answer","sendMessage","message","readyState","send","sendJSON","stringify","this","RTCPeerConnection","createDataChannel","onmessage","evt","data","iceConnectionState","localDescription","WebRTCFileChannelWithLog","startTime","speedStats","fileSize","time","performance","now","toFixed","speed","doneSendingFileSuper","doneSendingFile","sendFileInfoSuper","sendFileInfo","onNewFileSuper","onNewFile","onFileDownloadedSuper","onFileDownloaded","info","console","log","sendingQueue","onFileReady","onFileProgress","onFileSendProgress","onFileSent","onData","downloaded","blob","Blob","undefined","sendFile","queue","find","length","_sendFile","readFileChunks","sendData","onbufferedamountlow","shift","highWaterMark","Math","max","sendChunk","sendChunks","isSending","done","value","bufferedAmount","next","i","chunk","sent","WebRTCWithFileChannel","fileChannel","onFile","onRequestFile","_onMessage","asObj","requestFile","fileDataChannel","WebRTCFileChannel","sctp","maxMessageSize","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FirestoreConnection","connections","doc","add","getOffer","get","response","Error","sendOffer","then","getAnswer","removeListener","onSnapshot","sendAnswer","set","merge","firestore","collection","Backdrop","children","active","css","backdrop","backdrop_active","className","FileInput","onFileInput","noFocus","useState","isInDragMode","setIsInDragMode","dropzoneRef","useRef","checkFiles","useCallback","filtered","filterFiles","handleDrop","preventDefault","dataTransfer","from","handleInput","target","useEffect","handleDragStart","handleDragEnd","current","addEventListener","removeEventListener","ref","input","onDragOver","onDrop","multiple","onChange","tabIndex","Spinner","spinner","Home","showLoader","container","heading","lead","spinnerContainer","addConnection","addFiles","clearFiles","setShowLoader","history","useHistory","handleFileInput","FileCard","onClick","progressBytes","iconOnHover","icon","useMemo","res","extention","toLowerCase","icons","includes","getIcon","progress","sizeMB","card","card_iconContainer","card__icon","xmlns","card__icon_hover","card__title","title","card__size","toLocaleString","maximumFractionDigits","minimumFractionDigits","card__progress","FileList","onFileClick","appendComponent","list","map","AddFileCard","addFiles__caption","LocalFiles","removeFile","connectionStatus","setProgress","handleAddFiles","formatFileData","handleRemoveFile","filesList","RemoteFiles","noFiles","saveFile","handleRequestFile","InputToClipboard","text","isShareSupported","navigator","share","urlInput","inputGroup","readOnly","onFocus","select","autoFocus","btn","url","clipboard","focus","writeText","Header","onDisconnectClick","getConnectionState","advice","connected","hostWaiting","clientWaiting","connectionState","connectionStatusCN","connectionStatus_connected","header","disconnect","Share","remoteFilesSection","remoteFiles__shareInfo","remoteFiles__shareLink","location","remoteFiles__qr","renderAs","fgColor","bgColor","remoteFiles__spinner","container__your_files","container__remote_files","localFiles","addRemoteFiles","removeRemoteFile","alert","replace","clientSetConnection","useParams","to","newConnection","firebaseConnection","establishConnection","catch","App","hashType","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.526c5450.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"FileCard_card__DvQkw\",\"card_iconContainer\":\"FileCard_card_iconContainer__3ESwO\",\"card__icon\":\"FileCard_card__icon__1140Z\",\"card__icon_hover\":\"FileCard_card__icon_hover__12B2M\",\"card__title\":\"FileCard_card__title__211tm\",\"card__size\":\"FileCard_card__size__radKC\",\"card__progress\":\"FileCard_card__progress__2hLYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1b9As\",\"container\":\"Header_container__3Sx61\",\"connectionState\":\"Header_connectionState__3o736\",\"connectionStatus\":\"Header_connectionStatus__8fShc\",\"connectionStatus_connected\":\"Header_connectionStatus_connected__-8iAg\",\"disconnect\":\"Header_disconnect__1WtSJ\",\"advice\":\"Header_advice__JjUYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2lNJi\",\"heading\":\"Home_heading__3LyfN\",\"lead\":\"Home_lead__fRIGj\",\"backdrop\":\"Home_backdrop__reCZU\",\"spinnerContainer\":\"Home_spinnerContainer__3kUMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputGroup\":\"InputToClipboard_inputGroup__3zbD6\",\"input\":\"InputToClipboard_input__cVr1s\",\"btn\":\"InputToClipboard_btn__1Hr82\",\"icon\":\"InputToClipboard_icon__3Sfqw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFiles\":\"AddFileCard_addFiles__3kSyI\",\"icon\":\"AddFileCard_icon__3F120\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__1jq0J\",\"backdrop_active\":\"Backdrop_backdrop_active__1JWyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noFiles\":\"RemoteFiles_noFiles__3WGC9\",\"container\":\"RemoteFiles_container__3BL1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FileInput_input__3x8Ew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1DJCX\",\"rotate\":\"Spinner_rotate__3GRoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FileList_list__2mDrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LocalFiles_container__O2uLF\"};","interface ClassObject {\r\n  [index: string]: boolean;\r\n}\r\n\r\nconst classnames = (classes: ClassObject | string[]) => {\r\n  if (Array.isArray(classes)) return classes.join(' ');\r\n\r\n  return Object.keys(classes)\r\n    .filter((cn) => classes[cn])\r\n    .join(' ');\r\n};\r\n\r\nexport default classnames;\r\n","const tryParseJSON = (str: string): any | null => {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default tryParseJSON;\r\n","interface IMapCallback<T, U> {\r\n  (value: T[Extract<keyof T, string>], key: Extract<keyof T, string>, object: T): U;\r\n}\r\n\r\ninterface IMapObject {\r\n  <T extends Object, U>(obj: T, func: IMapCallback<T, U>): { [P in keyof T]: U };\r\n}\r\n\r\nconst mapObject: IMapObject = (obj, func) => {\r\n  const newObj: any = {};\r\n\r\n  for (const id in obj) {\r\n    newObj[id] = func(obj[id], id, obj);\r\n  }\r\n\r\n  return newObj;\r\n};\r\n\r\nexport default mapObject;\r\n","import mapObject from './mapObject';\r\n\r\nexport default (files: IHostFileStorage) => {\r\n  return mapObject(files, ({ file }) => ({\r\n    name: file.name,\r\n    size: file.size,\r\n  }));\r\n};\r\n","export default (file: Blob, name: string) => {\r\n  const link = document.createElement('a');\r\n  link.href = URL.createObjectURL(file);\r\n  document.body.appendChild(link);\r\n  link.download = name;\r\n  link.click();\r\n  window.URL.revokeObjectURL(link.href);\r\n  link.remove();\r\n};\r\n","export default (files: File[]) =>\r\n  files.filter(({ size, name, type }) => {\r\n    if (size === 0) return false;\r\n    if (name.match(/lnk$/)) return false;\r\n\r\n    // Some directories in Windows have size = 4096\r\n    if (type === '' && size === 4096) return false;\r\n\r\n    return true;\r\n  });\r\n","declare global {\r\n  type ConnectionState = 'connected' | 'hostWaiting' | 'clientWaiting';\r\n}\r\n\r\nexport default (isHost: boolean, isConnected: boolean): ConnectionState => {\r\n  if (isConnected) return 'connected';\r\n\r\n  return isHost ? 'hostWaiting' : 'clientWaiting';\r\n};\r\n","type readFileChunksOptions = {\r\n  onChunkLoad?: (chunk: ArrayBuffer) => void;\r\n  onLoaded?: (chunks: ArrayBuffer[]) => void;\r\n  readChunkSize?: number;\r\n  chunkSize?: number;\r\n};\r\n\r\nconst splitBuffer = (buf: ArrayBuffer, chunkSize: number) => {\r\n  let offset = 0;\r\n  const chunks = [];\r\n\r\n  while (offset < buf.byteLength) {\r\n    chunks.push(buf.slice(offset, offset + chunkSize));\r\n    offset += chunkSize;\r\n  }\r\n\r\n  return chunks;\r\n};\r\n\r\nexport default (file: File, options: readFileChunksOptions = {}) => {\r\n  const readChunkSize = options.readChunkSize || 2 * 1024 * 1024;\r\n  const chunkSize = options.chunkSize || 16 * 1024;\r\n\r\n  const { onChunkLoad = () => {}, onLoaded = () => {} } = options;\r\n\r\n  let offset = 0;\r\n  const reader = new FileReader();\r\n\r\n  const chunks: ArrayBuffer[] = [];\r\n  reader.onload = () => {\r\n    if (!reader.result || typeof reader.result === 'string') return;\r\n    chunks.push(...splitBuffer(reader.result, chunkSize));\r\n    offset += readChunkSize;\r\n    onChunkLoad(reader.result);\r\n  };\r\n\r\n  reader.onloadend = () => {\r\n    if (offset < file.size) {\r\n      reader.readAsArrayBuffer(file.slice(offset, offset + readChunkSize));\r\n    } else {\r\n      onLoaded(chunks);\r\n    }\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file.slice(0, readChunkSize));\r\n\r\n  return chunks;\r\n};\r\n","export default (obj: { [key: string]: any }, key: string) => {\r\n  const { [key]: deleted, ...rest } = obj;\r\n\r\n  return { deleted, val: rest };\r\n};\r\n","function throttle<T extends any[], U>(func: (...args: T) => U, ms = 100) {\r\n  let isThrottled = false;\r\n  let timeout: ReturnType<typeof setTimeout>;\r\n  let savedArgs: T | null;\r\n\r\n  const throttle = (...args: T) => {\r\n    savedArgs = args;\r\n\r\n    if (isThrottled) return;\r\n\r\n    func(...savedArgs);\r\n    savedArgs = null;\r\n    isThrottled = true;\r\n\r\n    timeout = setTimeout(() => {\r\n      isThrottled = false;\r\n      if (savedArgs) throttle(...savedArgs);\r\n    }, ms);\r\n\r\n    setTimeout(() => {}, 100);\r\n  };\r\n\r\n  throttle.stop = () => clearTimeout(timeout);\r\n  return throttle;\r\n}\r\n\r\nexport default throttle;\r\n","import { generateFileId } from 'lib/helpers';\r\n\r\nimport { HOST_ADD_FILES, HOST_CLEAR_FILES, HOST_REMOVE_FILE, SET_SENT_BYTES } from '../types';\r\n\r\nexport const hostAddFiles = (files: File[]): IHostAddFilesAction => {\r\n  const filesWithId: IHostFileStorage = {};\r\n\r\n  files.forEach((file) => {\r\n    const id = generateFileId(file);\r\n    filesWithId[id] = { file, sentBytes: 0 };\r\n  });\r\n\r\n  return { type: HOST_ADD_FILES, payload: filesWithId };\r\n};\r\n\r\nexport const hostRemoveFile = (id: string): IHostRemoveFileAction => ({\r\n  type: HOST_REMOVE_FILE,\r\n  payload: { id },\r\n});\r\n\r\nexport const hostClearFiles = (): IHostClearFilesAction => {\r\n  return { type: HOST_CLEAR_FILES };\r\n};\r\n\r\nexport const setSentBytes = (id: string, sentBytes: number): ISetSentBytesAction => {\r\n  return { type: SET_SENT_BYTES, payload: { id, sentBytes } };\r\n};\r\n","export default (file: File) => `${file.lastModified}${file.size}${file.name}`;\r\n","export const HOST_ADD_FILES = 'HOST_ADD_FILES';\r\nexport const HOST_REMOVE_FILE = 'HOST_REMOVE_FILE';\r\nexport const HOST_CLEAR_FILES = 'HOST_CLEAR_FILES';\r\n\r\nexport const CLIENT_ADD_FILES = 'CLIENT_ADD_FILES';\r\nexport const CLIENT_REMOVE_FILE = 'CLIENT_REMOVE_FILE';\r\n\r\nexport const SET_CONNECTION = 'SET_CONNECTION';\r\nexport const SET_CONNECTION_STATUS = 'SET_CONNECTION_STATUS';\r\n\r\nexport const SET_DOWNLOAD_PROGRESS = 'SET_DOWNLOAD_PROGRESS';\r\nexport const SET_SENT_BYTES = 'SET_SENT_BYTES';\r\nexport const SAVE_FILE_DATA = 'SAVE_FILE_DATA';\r\n","import { SET_CONNECTION, SET_CONNECTION_STATUS } from '../types';\r\n\r\nexport const hostSetConnection = (connection: WebRTCWithFileChannel): IConnectionAction => ({\r\n  type: SET_CONNECTION,\r\n  payload: { isHost: true, connection },\r\n});\r\n\r\nexport const clientSetConnection = (connection: WebRTCWithFileChannel): IConnectionAction => ({\r\n  type: SET_CONNECTION,\r\n  payload: { isHost: false, connection },\r\n});\r\n\r\nexport const setConnectionStatus = (status: RTCIceConnectionState): IConnectionStatusAction => ({\r\n  type: SET_CONNECTION_STATUS,\r\n  payload: { status },\r\n});\r\n","import { SET_CONNECTION, SET_CONNECTION_STATUS } from '../action';\r\n\r\ndeclare global {\r\n  interface IConnectionAction {\r\n    type: typeof SET_CONNECTION;\r\n    payload: {\r\n      isHost: boolean;\r\n      connection: WebRTCWithFileChannel;\r\n    };\r\n  }\r\n  interface IConnectionStatusAction {\r\n    type: typeof SET_CONNECTION_STATUS;\r\n    payload: { status: RTCIceConnectionState };\r\n  }\r\n}\r\n\r\ntype Action = IConnectionAction | IConnectionStatusAction;\r\n\r\ninterface IConnectionInfo {\r\n  isHost: boolean;\r\n  connection?: WebRTCWithFileChannel;\r\n  status: RTCIceConnectionState;\r\n}\r\n\r\nconst setConnection = (state: IConnectionInfo, action: IConnectionAction): IConnectionInfo => {\r\n  if (state.connection) state.connection.destroy();\r\n  return { ...state, ...action.payload, status: 'new' };\r\n};\r\n\r\nconst initState: IConnectionInfo = { isHost: false, status: 'new' };\r\n\r\nexport default (state: IConnectionInfo = initState, action: Action): IConnectionInfo => {\r\n  switch (action.type) {\r\n    case SET_CONNECTION:\r\n      return setConnection(state, action);\r\n    case SET_CONNECTION_STATUS:\r\n      return { ...state, ...action.payload };\r\n  }\r\n  \r\n  return state;\r\n};\r\n","import { HOST_ADD_FILES, HOST_REMOVE_FILE, HOST_CLEAR_FILES, SET_SENT_BYTES } from '../action';\r\nimport { removeKey } from 'lib/helpers';\r\n\r\ndeclare global {\r\n  interface IHostFileStorage {\r\n    [key: string]: {\r\n      file: File;\r\n      sentBytes: number;\r\n    };\r\n  }\r\n  interface IHostAddFilesAction {\r\n    type: typeof HOST_ADD_FILES;\r\n    payload: IHostFileStorage;\r\n  }\r\n  interface IHostRemoveFileAction {\r\n    type: typeof HOST_REMOVE_FILE;\r\n    payload: { id: string };\r\n  }\r\n  interface IHostClearFilesAction {\r\n    type: typeof HOST_CLEAR_FILES;\r\n  }\r\n\r\n  interface ISetSentBytesAction {\r\n    type: typeof SET_SENT_BYTES;\r\n    payload: {\r\n      id: string;\r\n      sentBytes: number;\r\n    };\r\n  }\r\n}\r\n\r\ntype Action = IHostAddFilesAction | IHostRemoveFileAction | IHostClearFilesAction | ISetSentBytesAction;\r\n\r\nconst initState: IHostFileStorage = {};\r\n\r\nconst setSentBytes = (state: IHostFileStorage, action: ISetSentBytesAction) => {\r\n  const files = { ...state };\r\n  files[action.payload.id].sentBytes = action.payload.sentBytes;\r\n  return files;\r\n};\r\n\r\nexport default (state: IHostFileStorage = initState, action: Action): IHostFileStorage => {\r\n  switch (action.type) {\r\n    case HOST_ADD_FILES:\r\n      return { ...state, ...action.payload };\r\n    case HOST_REMOVE_FILE:\r\n      return removeKey(state, action.payload.id).val;\r\n    case HOST_CLEAR_FILES:\r\n      return {};\r\n    case SET_SENT_BYTES:\r\n      return setSentBytes(state, action);\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { CLIENT_ADD_FILES, CLIENT_REMOVE_FILE, SET_DOWNLOAD_PROGRESS, SAVE_FILE_DATA } from '../action';\r\nimport { removeKey } from 'lib/helpers';\r\n\r\ndeclare global {\r\n  interface IClientFileStorage {\r\n    [key: string]: {\r\n      name: string;\r\n      size: number;\r\n      downloadedSize?: number;\r\n      file?: Blob;\r\n    };\r\n  }\r\n  interface IClientAddFilesAction {\r\n    type: typeof CLIENT_ADD_FILES;\r\n    payload: IClientFileStorage;\r\n  }\r\n  interface IClientRemoveFileAction {\r\n    type: typeof CLIENT_REMOVE_FILE;\r\n    payload: { id: string };\r\n  }\r\n  interface IClientDownloadProgressAction {\r\n    type: typeof SET_DOWNLOAD_PROGRESS;\r\n    payload: { id: string; downloadedSize: number };\r\n  }\r\n  interface IClientSaveFileDataAction {\r\n    type: typeof SAVE_FILE_DATA;\r\n    payload: { id: string; file: Blob };\r\n  }\r\n}\r\n\r\ntype Action = IClientAddFilesAction | IClientRemoveFileAction | IClientDownloadProgressAction | IClientSaveFileDataAction;\r\n\r\nconst setDownloadProgress = (state: IClientFileStorage, action: IClientDownloadProgressAction) => {\r\n  const files = { ...state };\r\n  files[action.payload.id].downloadedSize = action.payload.downloadedSize;\r\n  return files;\r\n};\r\n\r\nconst saveFileData = (state: IClientFileStorage, action: IClientSaveFileDataAction) => {\r\n  const files = { ...state };\r\n  const file = files[action.payload.id];\r\n  file.file = action.payload.file;\r\n  file.downloadedSize = file.size;\r\n  return files;\r\n};\r\n\r\nconst initState: IClientFileStorage = {};\r\n\r\nexport default (state: IClientFileStorage = initState, action: Action): IClientFileStorage => {\r\n  switch (action.type) {\r\n    case CLIENT_ADD_FILES:\r\n      return { ...state, ...action.payload };\r\n    case CLIENT_REMOVE_FILE:\r\n      return removeKey(state, action.payload.id).val;\r\n    case SET_DOWNLOAD_PROGRESS:\r\n      return setDownloadProgress(state, action);\r\n    case SAVE_FILE_DATA:\r\n      return saveFileData(state, action);\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport connection from './connection';\r\nimport hostFiles from './hostFiles';\r\nimport clientFiles from './clientFiles';\r\n\r\nconst combined = combineReducers({ connection, hostFiles, clientFiles });\r\n\r\ndeclare global {\r\n  type ReduxStore = ReturnType<typeof combined>;\r\n}\r\n\r\nexport default combined;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","const RTCPeerConnectionConfig: RTCConfiguration = {\r\n  iceServers: [\r\n    { urls: ['stun:stun.l.google.com:19302'] },\r\n    { urls: ['stun:stun1.l.google.com:19302'] },\r\n    { urls: ['stun:stun2.l.google.com:19302'] },\r\n    { urls: ['stun:stun3.l.google.com:19302'] },\r\n    { urls: ['stun:stun4.l.google.com:19302'] },\r\n    { urls: ['stun:stun.voipstunt.com'] },\r\n  ],\r\n};\r\n\r\nclass WebRTCConnection {\r\n  connection: RTCPeerConnection;\r\n  messageChannel: RTCDataChannel;\r\n  onConnection = (status: RTCIceConnectionState) => {};\r\n  onMessage = (msg: string) => {};\r\n\r\n  constructor(config: RTCConfiguration = RTCPeerConnectionConfig) {\r\n    this.connection = new RTCPeerConnection(config);\r\n    this.messageChannel = this.connection.createDataChannel('message');\r\n\r\n    this.messageChannel.onmessage = (evt) => this.onMessage(evt.data);\r\n\r\n    this.connection.ondatachannel = (evt) => this.handleDataChannel(evt);\r\n    this.connection.oniceconnectionstatechange = () => this.onConnection(this.connection.iceConnectionState);\r\n  }\r\n\r\n  get description() {\r\n    return JSON.stringify(this.connection.localDescription);\r\n  }\r\n\r\n  destroy = () => {\r\n    this.connection.ondatachannel = null;\r\n    this.connection.oniceconnectionstatechange = null;\r\n  };\r\n\r\n  handleDataChannel = ({ channel }: RTCDataChannelEvent) => {\r\n    if (channel.label === 'message') this.messageChannel = channel;\r\n  };\r\n\r\n  createOffer = () => {\r\n    const { connection } = this;\r\n\r\n    return new Promise<string>(async (resolve) => {\r\n      connection.onicecandidate = ({ candidate }) => !candidate && resolve(this.description);\r\n\r\n      const offer = await connection.createOffer();\r\n      await connection.setLocalDescription(offer);\r\n\r\n      setTimeout(() => {\r\n        connection.iceGatheringState !== 'complete' && resolve(this.description);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  connect = (descr: string) => {\r\n    const { connection } = this;\r\n    const remote = new RTCSessionDescription(JSON.parse(descr));\r\n\r\n    return new Promise<string>(async (resolve) => {\r\n      await connection.setRemoteDescription(remote);\r\n\r\n      if (remote.type !== 'offer') return resolve();\r\n\r\n      connection.onicecandidate = ({ candidate }) => !candidate && resolve(this.description);\r\n      const answer = await connection.createAnswer();\r\n      await connection.setLocalDescription(answer);\r\n    });\r\n  };\r\n\r\n  sendMessage = (msg: string): void => {\r\n    const message = this.messageChannel;\r\n\r\n    if (message.readyState === 'open') return message.send(msg);\r\n    setTimeout(() => this.sendMessage(msg), 50);\r\n  };\r\n\r\n  sendJSON = (obj: object): void => this.sendMessage(JSON.stringify(obj));\r\n}\r\n\r\nexport default WebRTCConnection;\r\n","import { readFileChunks } from 'lib/helpers';\r\n\r\nexport type FileInfo = {\r\n  id: string;\r\n  name: string;\r\n  size: number;\r\n};\r\n\r\ninterface IFileTransferInfo {\r\n  status: 'done' | 'new';\r\n  info?: FileInfo;\r\n}\r\n\r\nclass WebRTCFileChannel {\r\n  channel: RTCDataChannel;\r\n  chunkSize: number;\r\n\r\n  file?: {\r\n    data: ArrayBuffer[];\r\n    info: FileInfo;\r\n    downloaded: number;\r\n  };\r\n\r\n  onFileReady = (file: Blob, info: FileInfo): void => {};\r\n  onFileProgress = (info: { size: number; downloaded: number; id: string }): void => {};\r\n  onFileSendProgress = (info: { size: number; sent: number; id: string }): void => {};\r\n  onFileSent = (id: string, size: number): void => {};\r\n\r\n  constructor(channel: RTCDataChannel, chunkSize = 16 * 1024) {\r\n    this.channel = channel;\r\n    this.chunkSize = chunkSize;\r\n  }\r\n\r\n  onMessage = (data: ArrayBuffer | string) => {\r\n    if (typeof data !== 'string') return this.onData(data);\r\n\r\n    const { status, info }: IFileTransferInfo = JSON.parse(data);\r\n    const file = this.file;\r\n\r\n    if (status === 'new' && info) this.onNewFile(info);\r\n    else if (status === 'done' && file) this.onFileDownloaded(file.data, file.info);\r\n  };\r\n\r\n  private onData = (data: ArrayBuffer) => {\r\n    const file = this.file;\r\n    if (!file) return;\r\n\r\n    file.data.push(data);\r\n\r\n    const { id, size } = file.info;\r\n    const downloaded = (file.downloaded += data.byteLength);\r\n\r\n    this.onFileProgress({ size, id, downloaded });\r\n  };\r\n\r\n  protected onNewFile = (info: FileInfo) => {\r\n    this.file = { data: [], downloaded: 0, info };\r\n  };\r\n\r\n  protected onFileDownloaded = (data: ArrayBuffer[], info: FileInfo) => {\r\n    const blob = new Blob(data);\r\n    this.onFileReady(blob, info);\r\n    this.file = undefined;\r\n  };\r\n\r\n  sendingQueue: { id: string; file: File }[] = [];\r\n\r\n  sendFile = (file: File, id: string) => {\r\n    const queue = this.sendingQueue;\r\n    const hasInQueue = !!queue.find((file) => file.id === id);\r\n\r\n    if (hasInQueue) return;\r\n\r\n    queue.push({ file, id });\r\n\r\n    if (queue.length === 1) this._sendFile();\r\n  };\r\n\r\n  private _sendFile = () => {\r\n    if (!this.sendingQueue.length) return;\r\n\r\n    const { file, id } = this.sendingQueue[0];\r\n    this.sendFileInfo(id, file.name, file.size);\r\n\r\n    const chunks = readFileChunks(file, {\r\n      onChunkLoad: () => sendData(),\r\n      chunkSize: this.chunkSize,\r\n    });\r\n\r\n    const sendData = this.sendData(chunks, file.size, id);\r\n    this.channel.onbufferedamountlow = sendData;\r\n  };\r\n\r\n  protected sendFileInfo = (id: string, name: string, size: number) => {\r\n    const info = {\r\n      status: 'new',\r\n      info: { id, name, size },\r\n    };\r\n\r\n    this.channel.send(JSON.stringify(info));\r\n  };\r\n\r\n  protected doneSendingFile = () => {\r\n    this.channel.onbufferedamountlow = null;\r\n    this.channel.send(JSON.stringify({ status: 'done' }));\r\n    const file = this.sendingQueue.shift();\r\n\r\n    if (file) this.onFileSent(file.id, file.file.size);\r\n\r\n    this._sendFile();\r\n  };\r\n\r\n  private sendData = (chunks: ArrayBuffer[], size: number, id: string) => {\r\n    const { channel, chunkSize } = this;\r\n    const highWaterMark = Math.max(chunkSize * 8, 1048576);\r\n    const sendChunk = this.sendChunks(chunks, size, id);\r\n\r\n    let isSending = false;\r\n\r\n    const send = () => {\r\n      if (isSending) return;\r\n      if (!chunks.length) return;\r\n\r\n      isSending = true;\r\n\r\n      let bufferedAmount = channel.bufferedAmount;\r\n\r\n      let done: boolean;\r\n      let value: number | 'noChunk';\r\n\r\n      do {\r\n        ({ done = false, value = 0 } = sendChunk.next());\r\n\r\n        if (value === 'noChunk') {\r\n          isSending = false;\r\n          return;\r\n        }\r\n\r\n        bufferedAmount += value;\r\n        if (bufferedAmount >= highWaterMark) {\r\n          if (channel.bufferedAmount < chunkSize) setTimeout(send, 0);\r\n\r\n          isSending = false;\r\n          return;\r\n        }\r\n      } while (!done);\r\n\r\n      this.doneSendingFile();\r\n    };\r\n\r\n    return send;\r\n  };\r\n\r\n  private *sendChunks(chunks: ArrayBuffer[], fileSize: number, id: string) {\r\n    let sentBytes = 0;\r\n    let i = 0;\r\n    while (sentBytes < fileSize) {\r\n      const chunk = chunks[i];\r\n      if (chunk) {\r\n        ++i;\r\n        this.channel.send(chunk);\r\n        sentBytes += chunk.byteLength;\r\n        this.onFileSendProgress({ size: fileSize, sent: sentBytes, id });\r\n        yield chunk.byteLength;\r\n      } else {\r\n        yield 'noChunk';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass WebRTCFileChannelWithLog extends WebRTCFileChannel {\r\n  startTime = 0;\r\n\r\n  constructor(channel: RTCDataChannel, chunkSize?: number) {\r\n    super(channel, chunkSize);\r\n\r\n    const doneSendingFileSuper = this.doneSendingFile;\r\n    const sendFileInfoSuper = this.sendFileInfo;\r\n    const onNewFileSuper = this.onNewFile;\r\n    const onFileDownloadedSuper = this.onFileDownloaded;\r\n\r\n    this.onNewFile = (info) => {\r\n      this.startTime = performance.now();\r\n      return onNewFileSuper(info);\r\n    };\r\n\r\n    this.onFileDownloaded = (data, info) => {\r\n      console.log(this.speedStats(info.size));\r\n      return onFileDownloadedSuper(data, info);\r\n    };\r\n\r\n    this.sendFileInfo = (...args) => {\r\n      this.startTime = performance.now();\r\n      return sendFileInfoSuper(...args);\r\n    };\r\n\r\n    this.doneSendingFile = () => {\r\n      const file = this.sendingQueue[0];\r\n      console.log(this.speedStats(file?.file.size || 1));\r\n\r\n      return doneSendingFileSuper();\r\n    };\r\n  }\r\n\r\n  private speedStats = (fileSize: number) => {\r\n    const time = (performance.now() - this.startTime) / 1000;\r\n    const size = fileSize / 1024 / 1024;\r\n    return {\r\n      time: `${time.toFixed(2)} сек.`,\r\n      size: `${size.toFixed(2)} мб`,\r\n      speed: `${(size / time).toFixed(2)} мб/сек`,\r\n    };\r\n  };\r\n}\r\n\r\nexport default WebRTCFileChannelWithLog;\r\n","import WebRTCConnection from './WebRTCConnection';\r\nimport WebRTCFileChannel, { FileInfo } from './WebRTCFileChannel';\r\n\r\nimport { tryParseJSON } from 'lib/helpers';\r\n\r\nclass WebRTCWithFileChannel extends WebRTCConnection {\r\n  fileChannel: WebRTCFileChannel;\r\n\r\n  onFile = (file: Blob, info: FileInfo) => {};\r\n  onFileProgress = (info: { size: number; downloaded: number; id: string }): void => {};\r\n  onFileSendProgress = (info: { size: number; sent: number; id: string }): void => {};\r\n  onFileSent = (id: string, size: number): void => {};\r\n  onRequestFile = (id: string): File | void => {};\r\n\r\n  constructor(config?: RTCConfiguration) {\r\n    super(config);\r\n\r\n    const fileDataChannel = this.connection.createDataChannel('file');\r\n    this.fileChannel = new WebRTCFileChannel(fileDataChannel, this.connection.sctp?.maxMessageSize);\r\n\r\n    this.fileChannel.onFileReady = (file, info) => this.onFile(file, info);\r\n    this.fileChannel.onFileSent = (id, size) => this.onFileSent(id, size);\r\n    this.fileChannel.onFileProgress = (info) => this.onFileProgress(info);\r\n    this.fileChannel.onFileSendProgress = (info) => this.onFileSendProgress(info);\r\n\r\n    fileDataChannel.onmessage = ({ data }) => this.fileChannel.onMessage(data);\r\n    this.messageChannel.onmessage = this._onMessage;\r\n  }\r\n\r\n  handleDataChannel = ({ channel }: RTCDataChannelEvent) => {\r\n    if (channel.label === 'message') this.messageChannel = channel;\r\n    if (channel.label === 'file') this.fileChannel.channel = channel;\r\n  };\r\n\r\n  private _onMessage = (evt: MessageEvent) => {\r\n    const asObj = tryParseJSON(evt.data);\r\n\r\n    if (asObj && asObj.action === 'sendFile') {\r\n      const file = this.onRequestFile(asObj.id);\r\n      if (file) this.sendFile(file, asObj.id);\r\n      return;\r\n    }\r\n\r\n    this.onMessage(evt.data);\r\n  };\r\n\r\n  sendFile = (file: File, id: string) => this.fileChannel.sendFile(file, id);\r\n\r\n  requestFile = (id: string) => this.sendJSON({ action: 'sendFile', id });\r\n}\r\n\r\nexport default WebRTCWithFileChannel;\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import firebase from './firebase';\r\n\r\ntype FirestoreConnections = firebase.firestore.CollectionReference<firebase.firestore.DocumentData>;\r\n\r\nclass FirestoreConnection {\r\n  private connections: FirestoreConnections;\r\n\r\n  constructor() {\r\n    this.connections = firebase.firestore().collection('connections');\r\n  }\r\n\r\n  private doc = (id: string) => this.connections.doc(id);\r\n  private add = (data: firebase.firestore.DocumentData) => this.connections.add(data);\r\n\r\n  getOffer = async (id: string): Promise<string | void> => {\r\n    const response = await this.doc(id).get();\r\n    const data = response.data();\r\n    if (data) {\r\n      if (data.answer) throw new Error('Was already connected');\r\n      return data.offer;\r\n    }\r\n  };\r\n\r\n  sendOffer = (offer: string) => this.add({ offer }).then(({ id }) => id);\r\n\r\n  getAnswer = (id: string) =>\r\n    new Promise<string>((resolve) => {\r\n      const removeListener = this.doc(id).onSnapshot((response) => {\r\n        const data = response.data();\r\n        if (!data || !data.answer) return;\r\n\r\n        resolve(data.answer);\r\n        removeListener();\r\n      });\r\n    });\r\n\r\n  sendAnswer = (id: string, answer: string) => this.doc(id).set({ answer }, { merge: true });\r\n}\r\n\r\nexport default FirestoreConnection;\r\n","import Backdrop from './Backdrop';\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport css from './Backdrop.module.css';\r\nimport { classnames } from 'lib/helpers';\r\n\r\nconst Backdrop: React.FC<{ active?: boolean }> = ({ children, active = true }) => {\r\n  const classes = {\r\n    [css.backdrop]: true,\r\n    [css.backdrop_active]: active,\r\n  };\r\n\r\n  return <div className={classnames(classes)}>{children}</div>;\r\n};\r\n\r\nexport default Backdrop;\r\n","import FileInput from './FileInput';\r\n\r\nexport default FileInput;\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport css from './FileInput.module.css';\r\n\r\nimport Backdrop from 'Components/Backdrop';\r\nimport { filterFiles } from 'lib/helpers';\r\n\r\ninterface IFileInputProps {\r\n  onFileInput: (files: File[]) => void;\r\n  noFocus?: boolean;\r\n}\r\n\r\ntype InputFileChangeEvent = React.ChangeEvent<HTMLInputElement>;\r\n\r\nconst FileInput: React.FC<IFileInputProps> = ({ onFileInput, noFocus }) => {\r\n  const [isInDragMode, setIsInDragMode] = useState(false);\r\n  const dropzoneRef = useRef<HTMLDivElement>(null);\r\n\r\n  const checkFiles = useCallback(\r\n    (files: File[]) => {\r\n      const filtered = filterFiles(files);\r\n      if (filtered.length) onFileInput(filtered);\r\n    },\r\n    [onFileInput],\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    (evt: React.DragEvent) => {\r\n      evt.preventDefault();\r\n      setIsInDragMode(false);\r\n\r\n      const files = evt.dataTransfer.files;\r\n      if (files) checkFiles(Array.from(files));\r\n    },\r\n    [checkFiles],\r\n  );\r\n\r\n  const handleInput = useCallback(\r\n    (evt: InputFileChangeEvent) => {\r\n      const files = evt.target.files;\r\n      if (files) checkFiles(Array.from(files));\r\n      evt.target.value = '';\r\n    },\r\n    [checkFiles],\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handleDragStart = () => setIsInDragMode(true);\r\n    const handleDragEnd = (evt: DragEvent) => {\r\n      if (evt.target === dropzoneRef.current) setIsInDragMode(false);\r\n    };\r\n\r\n    window.addEventListener('dragenter', handleDragStart);\r\n    window.addEventListener('dragleave', handleDragEnd);\r\n\r\n    return () => {\r\n      window.removeEventListener('dragenter', handleDragStart);\r\n      window.removeEventListener('dragleave', handleDragEnd);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Backdrop active={isInDragMode}>\r\n      <div ref={dropzoneRef} className={css.input} onDragOver={(evt) => evt.preventDefault()} onDrop={handleDrop}>\r\n        <input type=\"file\" name=\"files\" className=\"visually-hidden\" multiple onChange={handleInput} tabIndex={noFocus ? -1 : 0} />\r\n      </div>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","import React from 'react';\r\nimport css from './Spinner.module.css';\r\n\r\nconst Spinner: React.FC = () => <span className={css.spinner} />;\r\n\r\nexport default Spinner;\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport css from './Home.module.css';\r\n\r\nimport FileInput from 'Components/FileInput';\r\nimport Spinner from 'Components/Spinner/Spinner';\r\nimport Backdrop from 'Components/Backdrop';\r\n\r\ninterface IHomeProps {\r\n  onFileInput: (files: File[]) => void;\r\n  showLoader?: boolean;\r\n}\r\n\r\nconst Home: React.FC<IHomeProps> = ({ onFileInput, showLoader = false }) => {\r\n  return (\r\n    <>\r\n      <label className={css.container}>\r\n        <h1 className={css.heading}>Share files easily</h1>\r\n        <p className={css.lead}>Drop files here or click to select</p>\r\n        <FileInput onFileInput={onFileInput} />\r\n      </label>\r\n      <Backdrop active={showLoader}>\r\n        <div className={css.backdrop}>\r\n          <div className={css.spinnerContainer}>\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      </Backdrop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { hostAddFiles, hostSetConnection, hostClearFiles } from 'lib/redux';\r\nimport { WebRTCWithFileChannel } from 'lib/webrtc';\r\nimport { FirestoreConnection } from 'lib/firebase';\r\nimport HomeUI from 'Components/Home';\r\n\r\ninterface IHomeProps {\r\n  addConnection: typeof hostSetConnection;\r\n  addFiles: typeof hostAddFiles;\r\n  clearFiles: typeof hostClearFiles;\r\n}\r\n\r\nconst Home: React.FC<IHomeProps> = ({ addConnection, addFiles, clearFiles }) => {\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleFileInput = async (files: File[]) => {\r\n    const connection = new WebRTCWithFileChannel();\r\n    addConnection(connection);\r\n    clearFiles();\r\n    addFiles(files);\r\n\r\n    setShowLoader(true);\r\n\r\n    const firestore = new FirestoreConnection();\r\n\r\n    const offer = await connection.createOffer();\r\n    const id = await firestore.sendOffer(offer);\r\n\r\n    history.push(`/${id}`);\r\n    const answer = await firestore.getAnswer(id);\r\n    connection.connect(answer);\r\n  };\r\n\r\n  return <HomeUI onFileInput={handleFileInput} showLoader={showLoader} />;\r\n};\r\n\r\nexport default connect(null, {\r\n  addConnection: hostSetConnection,\r\n  addFiles: hostAddFiles,\r\n  clearFiles: hostClearFiles,\r\n})(Home);\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport Home from 'Containers/Home';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return <Home />;\r\n};\r\n\r\nexport default HomePage;\r\n","import FileCard from './FileCard';\r\n\r\nexport default FileCard;\r\n","import React, { useMemo } from 'react';\r\nimport css from './FileCard.module.css';\r\n\r\ninterface IFileCardProps {\r\n  name: string;\r\n  id: string;\r\n  onClick?: (id: string) => void;\r\n  size: number;\r\n  progressBytes: number;\r\n  iconOnHover: string;\r\n}\r\n\r\nconst getIcon = (extention: string) => {\r\n  extention = extention.toLowerCase();\r\n  const icons: { [key: string]: string[] } = {\r\n    'file-text': ['txt', 'doc', 'docx', 'rtf', 'odt'],\r\n    'file-image': ['psd', 'tiff', 'tif', 'bmp', 'jpeg', 'jpg', 'gif', 'png', 'ico', 'webp', 'svg', 'eps', 'ai', 'heic', 'nef', 'crw', 'arw'],\r\n    'file-audio': ['ac3', 'aif', 'amr', 'aud', 'mp3', 'flac', 'iff', 'm4a', 'm4b', 'm4p', 'mid', 'mpa', 'ogg', 'wav', 'wave'],\r\n    'file-video': ['mp4', 'avi', 'mpg', 'mov', 'wmv', '3gp', 'flv', 'm4v', 'mts', 'ts', 'webm'],\r\n    'file-zip': ['zip', 'rar', '7z', 'jar', 'gz'],\r\n  };\r\n\r\n  for (const icon in icons) {\r\n    if (icons[icon].includes(extention)) return icon;\r\n  }\r\n\r\n  return 'file-empty';\r\n};\r\n\r\nconst FileCard: React.FC<IFileCardProps> = ({ name, id, onClick = () => {}, size, progressBytes, iconOnHover }) => {\r\n  const icon = useMemo(() => {\r\n    const res = name.match(/\\.([a-zA-Z0-9]+)$/);\r\n    const extention = res ? res[1] : '';\r\n    return getIcon(extention);\r\n  }, [name]);\r\n\r\n  const progress = (progressBytes / size) * 100;\r\n  const sizeMB = size / 1024 / 1024;\r\n\r\n  return (\r\n    <button className={css.card} onClick={() => onClick(id)}>\r\n      <div className={css.card_iconContainer}>\r\n        <svg className={css.card__icon} xmlns=\"http://www.w3.org/2000/svg\">\r\n          <use href={`icons.svg#${icon}`} />\r\n        </svg>\r\n        <svg className={css.card__icon_hover} xmlns=\"http://www.w3.org/2000/svg\">\r\n          <use href={`icons.svg#${iconOnHover}`} />\r\n        </svg>\r\n      </div>\r\n      <p className={css.card__title} title={name}>\r\n        {name}\r\n      </p>\r\n      <p className={css.card__size}>\r\n        {sizeMB < 10000\r\n          ? sizeMB.toFixed(1)\r\n          : sizeMB.toLocaleString(undefined, {\r\n              maximumFractionDigits: 1,\r\n              minimumFractionDigits: 1,\r\n            })}{' '}\r\n        MB\r\n      </p>\r\n      <progress value={progress ?? 0} max={100} className={css.card__progress} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FileCard;\r\n","import FileList from './FileList';\r\n\r\nexport default FileList;\r\n","import React from 'react';\r\nimport css from './FileList.module.css';\r\nimport FileCard from 'Components/FileCard';\r\n\r\ninterface IFileListProps {\r\n  files: {\r\n    id: string;\r\n    name: string;\r\n    size: number;\r\n    progressBytes: number;\r\n  }[];\r\n  onFileClick?: (id: string) => void;\r\n  appendComponent?: React.ReactNode;\r\n  iconOnHover: string;\r\n}\r\n\r\nconst FileList: React.FC<IFileListProps> = ({ files, onFileClick, appendComponent, iconOnHover }) => (\r\n  <ul className={css.list}>\r\n    {files.map((file) => (\r\n      <li key={file.id}>\r\n        <FileCard {...file} onClick={onFileClick} iconOnHover={iconOnHover} />\r\n      </li>\r\n    ))}\r\n    {appendComponent ? <li>{appendComponent}</li> : null}\r\n  </ul>\r\n);\r\n\r\nexport default FileList;\r\n","import AddFileCard from './AddFileCard';\r\n\r\nexport default AddFileCard;\r\n","import React, { useCallback } from 'react';\r\nimport css from './AddFileCard.module.css';\r\nimport { filterFiles } from 'lib/helpers';\r\n\r\ntype ChangeEvent = React.ChangeEvent<HTMLInputElement>;\r\n\r\nconst AddFileCard: React.FC<{ onFileInput: (files: File[]) => void }> = ({ onFileInput }) => {\r\n  const handleFileInput = useCallback(\r\n    (evt: ChangeEvent) => {\r\n      const files = filterFiles(Array.from(evt.target.files || []));\r\n      if (files.length) onFileInput(files);\r\n      evt.target.value = '';\r\n    },\r\n    [onFileInput],\r\n  );\r\n\r\n  return (\r\n    <label className={css.addFiles}>\r\n      <svg className={css.icon} xmlns=\"http://www.w3.org/2000/svg\">\r\n        <use href=\"icons.svg#file-add\" />\r\n      </svg>\r\n      <span className={css.addFiles__caption}>Add Files</span>\r\n      <input type=\"file\" className=\"visually-hidden\" multiple onChange={handleFileInput} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default AddFileCard;\r\n","import LocalFiles from './LocalFiles';\r\n\r\nexport default LocalFiles;\r\n","import React from 'react';\r\n\r\nimport FileList from 'Components/FileList';\r\nimport AddFileCard from 'Components/AddFileCard';\r\nimport FileInput from 'Components/FileInput';\r\n\r\nimport css from './LocalFiles.module.css';\r\n\r\ninterface ILocalFilesProps {\r\n  files: { id: string; name: string; size: number; progressBytes: number }[];\r\n  addFiles: (files: File[]) => void;\r\n  removeFile: (id: string) => void;\r\n}\r\n\r\nconst LocalFiles: React.FC<ILocalFilesProps> = ({ files, addFiles, removeFile }) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <FileList files={files} iconOnHover=\"file-delete\" onFileClick={removeFile} appendComponent={<AddFileCard onFileInput={addFiles} />} />\r\n      <FileInput onFileInput={addFiles} noFocus />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocalFiles;\r\n","import LocalFiles from './LocalFiles';\r\n\r\nexport default LocalFiles;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hostAddFiles, hostRemoveFile, setConnectionStatus, setSentBytes } from 'lib/redux';\r\nimport { formatFileData, throttle } from 'lib/helpers';\r\n\r\nimport LocalFilesUI from 'Components/LocalFiles';\r\n\r\ninterface ILocalFilesProps {\r\n  connection: WebRTCWithFileChannel;\r\n  files: IHostFileStorage;\r\n  addFiles: typeof hostAddFiles;\r\n  removeFile: typeof hostRemoveFile;\r\n  setSentBytes: typeof setSentBytes;\r\n}\r\n\r\nconst LocalFiles: React.FC<ILocalFilesProps> = ({ connection, files, addFiles, removeFile, setSentBytes }) => {\r\n  useEffect(() => {\r\n    const setProgress = throttle(setSentBytes, 33);\r\n    connection.onFileSendProgress = ({ id, sent }) => setProgress(id, sent);\r\n    connection.onFileSent = (id, size) => setSentBytes(id, size);\r\n\r\n    return () => setProgress.stop();\r\n  }, [connection, setSentBytes]);\r\n\r\n  const handleAddFiles = useCallback(\r\n    (files: File[]) => {\r\n      const { payload } = addFiles(files);\r\n      connection.sendJSON({ action: 'addFiles', files: formatFileData(payload) });\r\n    },\r\n    [connection, addFiles],\r\n  );\r\n\r\n  const handleRemoveFile = useCallback(\r\n    (id: string) => {\r\n      const { sentBytes, file } = files[id];\r\n      if (sentBytes > 0 && sentBytes < file.size) return;\r\n\r\n      removeFile(id);\r\n      connection.sendJSON({ action: 'removeFile', id });\r\n    },\r\n    [connection, removeFile, files],\r\n  );\r\n\r\n  const filesList = Object.keys(files).map((id) => {\r\n    const { file, sentBytes } = files[id];\r\n\r\n    return {\r\n      id,\r\n      name: file.name,\r\n      size: file.size,\r\n      progressBytes: sentBytes,\r\n    };\r\n  });\r\n\r\n  return <LocalFilesUI addFiles={handleAddFiles} files={filesList} removeFile={handleRemoveFile} />;\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxStore) => ({\r\n  files: state.hostFiles,\r\n  connectionStatus: state.connection.status,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addFiles: hostAddFiles, removeFile: hostRemoveFile, setConnectionStatus, setSentBytes })(LocalFiles);\r\n","import RemoteFiles from './RemoteFiles';\r\n\r\nexport default RemoteFiles;\r\n","import React from 'react';\r\n\r\nimport FileList from 'Components/FileList';\r\nimport css from './RemoteFiles.module.css';\r\n\r\ninterface IRemoteFilesProps {\r\n  files: { id: string; name: string; size: number; progressBytes: number }[];\r\n  requestFile: (id: string) => void;\r\n}\r\n\r\nconst RemoteFiles: React.FC<IRemoteFilesProps> = ({ files, requestFile }) => {\r\n  if (!files.length) return <div className={css.noFiles}>There's no files yet :(</div>;\r\n  return (\r\n    <div className={css.container}>\r\n      <FileList files={files} onFileClick={requestFile} iconOnHover=\"file-download\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoteFiles;\r\n","import RemoteFiles from './RemoteFiles';\r\n\r\nexport default RemoteFiles;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setDownloadProgress, saveFileData } from 'lib/redux';\r\nimport { saveFile, throttle } from 'lib/helpers';\r\n\r\nimport RemoteFilesUI from 'Components/RemoteFiles';\r\n\r\ninterface ISRemoteFilesProps {\r\n  connection: WebRTCWithFileChannel;\r\n  files: IClientFileStorage;\r\n  setDownloadProgress: typeof setDownloadProgress;\r\n  saveFileData: typeof saveFileData;\r\n}\r\n\r\nconst RemoteFiles: React.FC<ISRemoteFilesProps> = ({ connection, files, setDownloadProgress, saveFileData }) => {\r\n  useEffect(() => {\r\n    const setProgress = throttle(setDownloadProgress, 33);\r\n    connection.onFileProgress = ({ id, downloaded }) => setProgress(id, downloaded);\r\n\r\n    return () => setProgress.stop();\r\n  }, [connection, setDownloadProgress]);\r\n\r\n  useEffect(() => {\r\n    connection.onFile = (file, info) => {\r\n      saveFileData(info.id, file);\r\n      saveFile(file, info.name);\r\n    };\r\n  }, [connection, saveFileData]);\r\n\r\n  const handleRequestFile = useCallback(\r\n    (id: string) => {\r\n      const file = files[id];\r\n      if (file.file) return saveFile(file.file, file.name);\r\n      if (file.downloadedSize) return;\r\n\r\n      setDownloadProgress(id, 1);\r\n      connection.requestFile(id);\r\n    },\r\n    [connection, files, setDownloadProgress],\r\n  );\r\n\r\n  const filesList = Object.keys(files).map((id) => {\r\n    const file = files[id];\r\n\r\n    return {\r\n      id,\r\n      name: file.name,\r\n      size: file.size,\r\n      progressBytes: file.downloadedSize || 0,\r\n    };\r\n  });\r\n\r\n  return <RemoteFilesUI files={filesList} requestFile={handleRequestFile} />;\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxStore) => ({ files: state.clientFiles, connectionStatus: state.connection.status });\r\n\r\nexport default connect(mapStateToProps, { setDownloadProgress, saveFileData })(RemoteFiles);\r\n","import { CLIENT_ADD_FILES, CLIENT_REMOVE_FILE, SET_DOWNLOAD_PROGRESS, SAVE_FILE_DATA } from '../types';\r\n\r\nexport const clientAddFiles = (files: IClientFileStorage): IClientAddFilesAction => ({\r\n  type: CLIENT_ADD_FILES,\r\n  payload: files,\r\n});\r\n\r\nexport const clientRemoveFile = (id: string): IClientRemoveFileAction => ({\r\n  type: CLIENT_REMOVE_FILE,\r\n  payload: { id },\r\n});\r\n\r\nexport const setDownloadProgress = (id: string, size: number): IClientDownloadProgressAction => ({\r\n  type: SET_DOWNLOAD_PROGRESS,\r\n  payload: { id, downloadedSize: size },\r\n});\r\n\r\nexport const saveFileData = (id: string, file: Blob): IClientSaveFileDataAction => ({\r\n  type: SAVE_FILE_DATA,\r\n  payload: { id, file },\r\n});\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;\r\n","import InputToClipboard from './InputToClipboard';\r\n\r\nexport default InputToClipboard;\r\n","import React, { useRef } from 'react';\r\nimport css from './InputToClipboard.module.css';\r\n\r\ninterface IInputToClipboardProps {\r\n  text: string;\r\n}\r\n\r\nconst InputToClipboard: React.FC<IInputToClipboardProps> = ({ text }) => {\r\n  // @ts-ignore no such function in TS yet\r\n  const isShareSupported = !!navigator.share;\r\n\r\n  const urlInput = useRef<HTMLInputElement>(null);\r\n\r\n  const handleClick = () => {\r\n    try {\r\n      // @ts-ignore no such function in TS yet\r\n      window.navigator.share({\r\n        title: 'Share Files',\r\n        text: 'Download my files and send yours',\r\n        url: text,\r\n      });\r\n    } catch {}\r\n\r\n    if (!navigator.clipboard) {\r\n      return urlInput.current?.focus();\r\n    }\r\n\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  return (\r\n    <div className={css.inputGroup}>\r\n      <input ref={urlInput} className={css.input} readOnly value={text} onFocus={(evt) => evt.target.select()} autoFocus />\r\n      <button className={css.btn} onClick={handleClick}>\r\n        <svg className={css.icon} xmlns=\"http://www.w3.org/2000/svg\">\r\n          <use href={`icons.svg#${isShareSupported ? 'share' : 'copy'}`} />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputToClipboard;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport css from './Header.module.css';\r\nimport { getConnectionState, classnames } from 'lib/helpers';\r\n\r\ninterface IHeaderProps {\r\n  isHost: boolean;\r\n  isConnected: boolean;\r\n  onDisconnectClick?: () => void;\r\n}\r\n\r\nconst Header: React.FC<IHeaderProps> = ({ isHost, isConnected, onDisconnectClick = () => {} }) => {\r\n  const connectionStatus = getConnectionState(isHost, isConnected);\r\n\r\n  const advice = {\r\n    connected: 'Click on remote file to start downloading it',\r\n    hostWaiting: 'Click on your file to remove it',\r\n    clientWaiting: 'Click on your file to remove it',\r\n  }[connectionStatus];\r\n\r\n  const connectionState = {\r\n    connected: 'Connected',\r\n    hostWaiting: 'Waiting For Connection',\r\n    clientWaiting: 'Connecting',\r\n  }[connectionStatus];\r\n\r\n  const connectionStatusCN = classnames({\r\n    [css.connectionStatus]: true,\r\n    [css.connectionStatus_connected]: connectionStatus === 'connected',\r\n  });\r\n\r\n  return (\r\n    <header className={css.header}>\r\n      <div className={css.container}>\r\n        <div className={css.advice}>{advice}</div>\r\n\r\n        <div className={css.connectionState}>\r\n          <span className={connectionStatusCN} />\r\n          {connectionState}\r\n        </div>\r\n\r\n        <button className={css.disconnect} onClick={onDisconnectClick}>\r\n          Disconnect\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Share from './Share';\r\n\r\nexport default Share;\r\n","import React from 'react';\r\nimport QRCode from 'qrcode.react';\r\n\r\nimport css from './Share.module.css';\r\n\r\nimport LocalFiles from 'Containers/LocalFiles';\r\nimport RemoteFiles from 'Containers/RemoteFiles';\r\nimport Spinner from 'Components/Spinner';\r\nimport InputToClipboard from 'Components/InputToClipboard';\r\nimport Header from 'Components/Header';\r\nimport { getConnectionState } from 'lib/helpers';\r\n\r\ninterface IShareProps {\r\n  connection: WebRTCWithFileChannel;\r\n  isConnected: boolean;\r\n  isHost: boolean;\r\n  disconnect: () => void;\r\n}\r\n\r\nconst Share: React.FC<IShareProps> = ({ isConnected, isHost, connection, disconnect }) => {\r\n  const remoteFilesSection = {\r\n    connected: <RemoteFiles connection={connection} />,\r\n    hostWaiting: (\r\n      <div>\r\n        <p className={css.remoteFiles__shareInfo}>Copy this link and send it to the person you want to share files with.</p>\r\n        <div className={css.remoteFiles__shareLink}>\r\n          <InputToClipboard text={window.location.href} />\r\n        </div>\r\n        <div className={css.remoteFiles__qr}>\r\n          <QRCode value={window.location.href} renderAs=\"svg\" size={200} fgColor=\"var(--color-text)\" bgColor=\"transparent\" />\r\n        </div>\r\n      </div>\r\n    ),\r\n    clientWaiting: (\r\n      <div className={css.remoteFiles__spinner}>\r\n        <Spinner />\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const connectionState = getConnectionState(isHost, isConnected);\r\n\r\n  return (\r\n    <>\r\n      <Header isHost={isHost} isConnected={isConnected} onDisconnectClick={disconnect} />\r\n      <main className={css.container}>\r\n        <section className={css.container__your_files}>\r\n          <h2 className={css.heading}>Your Files</h2>\r\n          <LocalFiles connection={connection} />\r\n        </section>\r\n        <section className={css.container__remote_files}>\r\n          <h2 className={css.heading}>Remote Files</h2>\r\n          {remoteFilesSection[connectionState]}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Share;\r\n","import Share from './Share';\r\n\r\nexport default Share;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ShareUI from 'Components/Share';\r\nimport { setConnectionStatus, clientAddFiles, clientRemoveFile } from 'lib/redux';\r\nimport { formatFileData, tryParseJSON } from 'lib/helpers';\r\n\r\ninterface IShareProps {\r\n  connection: WebRTCWithFileChannel;\r\n  connectionStatus: RTCIceConnectionState;\r\n  setConnectionStatus: typeof setConnectionStatus;\r\n  addRemoteFiles: typeof clientAddFiles;\r\n  removeRemoteFile: typeof clientRemoveFile;\r\n  localFiles: IHostFileStorage;\r\n  isHost: boolean;\r\n}\r\n\r\nconst Share: React.FC<IShareProps> = ({ connection, connectionStatus, setConnectionStatus, localFiles, isHost, addRemoteFiles, removeRemoteFile }) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    connection.onRequestFile = (id) => localFiles[id].file;\r\n  \r\n    connection.onConnection = (status) => {\r\n      alert(status)\r\n      setConnectionStatus(status);\r\n      if (status === 'disconnected') return history.push('/');\r\n      if (status !== 'connected') return;\r\n      setTimeout(() => connection.sendJSON({ action: 'addFiles', files: formatFileData(localFiles) }), 50);\r\n    };\r\n  }, [localFiles, connection, history, setConnectionStatus])\r\n\r\n  useEffect(() => {\r\n    connection.onMessage = (msg) => {\r\n      const obj = tryParseJSON(msg);\r\n      if (!obj) return;\r\n      if (obj.action === 'addFiles') addRemoteFiles(obj.files);\r\n      else if (obj.action === 'removeFile') removeRemoteFile(obj.id);\r\n    };\r\n  }, [connection, addRemoteFiles, removeRemoteFile]);\r\n\r\n  return <ShareUI isConnected={['connected', 'completed'].includes(connectionStatus)} isHost={isHost} connection={connection} disconnect={() => history.replace('/')} />;\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxStore) => ({\r\n  connectionStatus: state.connection.status,\r\n  localFiles: state.hostFiles,\r\n  isHost: state.connection.isHost,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setConnectionStatus, addRemoteFiles: clientAddFiles, removeRemoteFile: clientRemoveFile })(Share);\r\n","import Share from './Share';\r\n\r\nexport default Share;\r\n","import React from 'react';\r\nimport { useHistory, useParams, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Share from 'Containers/Share';\r\nimport { WebRTCWithFileChannel } from 'lib/webrtc';\r\nimport { FirestoreConnection } from 'lib/firebase';\r\nimport { clientSetConnection } from 'lib/redux';\r\n\r\ninterface IShareProps {\r\n  isHost: boolean;\r\n  connection: WebRTCWithFileChannel | undefined;\r\n  clientSetConnection: typeof clientSetConnection;\r\n}\r\n\r\nconst establishConnection = (connection: WebRTCWithFileChannel, id: string) => {\r\n  const firebaseConnection = new FirestoreConnection();\r\n\r\n  return firebaseConnection\r\n    .getOffer(id)\r\n    .then((offer) => {\r\n      if (!offer) throw new Error(`Can't get offer`);\r\n      return connection.connect(offer);\r\n    })\r\n    .then((answer) => firebaseConnection.sendAnswer(id, answer));\r\n};\r\n\r\nconst SharePage: React.FC<IShareProps> = ({ isHost, connection, clientSetConnection }) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  if (connection) {\r\n    return <Share connection={connection} />;\r\n  }\r\n\r\n  if (isHost || !id) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const newConnection = new WebRTCWithFileChannel();\r\n  clientSetConnection(newConnection);\r\n\r\n  establishConnection(newConnection, id).catch(() => history.replace('/'));\r\n\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxStore) => {\r\n  return {\r\n    isHost: state.connection.isHost,\r\n    connection: state.connection.connection,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { clientSetConnection })(SharePage);\r\n","import React from 'react';\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\n\r\nimport Home from 'Pages/Home';\r\nimport Share from 'Pages/Share';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter hashType=\"noslash\">\r\n        <Switch>\r\n          <Route path=\"/:id\">\r\n            <Share />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'lib/redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Share_container__2LnzK\",\"heading\":\"Share_heading__ZECPu\",\"remoteFiles__shareInfo\":\"Share_remoteFiles__shareInfo__1OlHO\",\"remoteFiles__shareLink\":\"Share_remoteFiles__shareLink__exPSw\",\"remoteFiles__spinner\":\"Share_remoteFiles__spinner__1C4Cu\",\"remoteFiles__qr\":\"Share_remoteFiles__qr__3VYI5\",\"container__your_files\":\"Share_container__your_files__2vKCC\"};"],"sourceRoot":""}